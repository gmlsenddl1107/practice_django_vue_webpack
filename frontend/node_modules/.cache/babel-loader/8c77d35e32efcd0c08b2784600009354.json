{"remainingRequest":"/home/min/PycharmProjects/gpu/frontend/node_modules/babel-loader/lib/index.js!/home/min/PycharmProjects/gpu/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/min/PycharmProjects/gpu/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/min/PycharmProjects/gpu/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/min/PycharmProjects/gpu/frontend/src/components/cp_gpu_status.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/min/PycharmProjects/gpu/frontend/src/components/cp_gpu_status.vue","mtime":1586684658496},{"path":"/home/min/PycharmProjects/gpu/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/min/PycharmProjects/gpu/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/min/PycharmProjects/gpu/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/min/PycharmProjects/gpu/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/min/PycharmProjects/gpu/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNwX2JhcmNoYXJ0IGZyb20gIi4vY3BfYmFyY2hhcnQiOwppbXBvcnQgY3BfZ3B1X3Byb2Nlc3MgZnJvbSAiLi9jcF9ncHVfcHJvY2VzcyI7CmltcG9ydCB7IFRva2VuU2VydmljZSB9IGZyb20gIi4uL3N0b3JhZ2Uvc2VydmljZSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY3BfZ3B1X3N0YXR1cycsCiAgY29tcG9uZW50czogewogICAgY3BfYmFyY2hhcnQ6IGNwX2JhcmNoYXJ0LAogICAgY3BfZ3B1X3Byb2Nlc3M6IGNwX2dwdV9wcm9jZXNzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgZ3B1X3N0YXR1czogJycsCiAgICAgIHNlbGVjdGVkX3NlcnZlcl9uYW1lOiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNob3dNb2RhbDogZnVuY3Rpb24gc2hvd01vZGFsKGtleSkgewogICAgICB0aGlzLnNlbGVjdGVkX3NlcnZlcl9uYW1lID0ga2V5OwogICAgICB0aGlzLmRpYWxvZyA9IHRydWU7CiAgICAgIGNvbnNvbGUubG9nKGtleSk7CiAgICB9LAogICAgZ2V0R3B1U3RhdHVzOiBmdW5jdGlvbiBnZXRHcHVTdGF0dXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnRva2VuID0gVG9rZW5TZXJ2aWNlLmdldFRva2VuKCk7CiAgICAgIGNvbnNvbGUubG9nKCJ0b2tlbiIsIHRoaXMudG9rZW4pOwogICAgICB2YXIgYXhpb3NDb25maWcgPSB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnVG9rZW4gJyArIHRoaXMudG9rZW4KICAgICAgICB9CiAgICAgIH07CiAgICAgIGF4aW9zLmdldCgiaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS9ncHUvc3RhdHVzLyIsIGF4aW9zQ29uZmlnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gX3RoaXMuZ3B1X3N0YXR1cyA9IHJlcy5kYXRhOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmdwdV9zdGF0dXMpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0R3B1U3RhdHVzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["cp_gpu_status.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,SAAA,YAAA,QAAA,oBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,cAAA,EAAA;AAFA,GAHA;AAQA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,oBAAA,EAAA;AAHA,KAAA;AAOA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AAEA,IAAA,SAFA,qBAEA,GAFA,EAEA;AACA,WAAA,oBAAA,GAAA,GAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,KANA;AAQA,IAAA,YARA,0BAQA;AAAA;;AACA,WAAA,KAAA,GAAA,YAAA,CAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,KAAA,KAAA;AACA,UAAA,WAAA,GAAA;AACA,QAAA,OAAA,EAAA;AACA,2BAAA,WAAA,KAAA;AADA;AADA,OAAA;AAKA,MAAA,KAAA,CAAA,GAAA,CAAA,uCAAA,EAAA,WAAA,EACA,IADA,CAEA,UAAA,GAAA;AAAA,eAAA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA;AAAA,OAFA,EAKA,KALA,CAKA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OALA;AAMA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA;AACA;AAvBA,GAjBA;AA0CA,EAAA,OA1CA,qBA0CA;AACA,SAAA,YAAA;AACA;AA5CA,CAAA","sourcesContent":["<template>\n    <v-container>\n        <div class=\"row \">\n            <v-toolbar color=\"grey lighten-2\">\n\n                <v-toolbar-title>\n                    <p class=\"headline  font-weight-bold\">현재 GPU 사용량</p>\n                </v-toolbar-title>\n                <v-toolbar-title>\n                <p class=\"subtitle-2 \">    ( util_gpu : 1/6 ~ 1 second 사이의 GPU를 사용한 percentage )</p>\n\n\n                </v-toolbar-title>\n            </v-toolbar>\n        </div>\n        <br>\n        <div class=\"row\">\n            <p class=\"headline  font-weight-bold\">KDL Group</p>\n        </div>\n        <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-md-4\">\n            <div v-for=\"item in gpu_status['KDL']\" :key=\"item.server_name\" class=\"col-md-3\">\n\n                <v-card class=\"pa-3\">\n                    <v-card-text>\n                        <div>\n                            {{ item.create_date}}\n                        </div>\n                        <p class=\"title text--primary\">{{ item.server_name }}</p>\n                    </v-card-text>\n                    <div>\n                        <cp_barchart :height=\"200\" v-bind:my_labels=\"item.index_gpu\"\n                                     v-bind:my_datas=\"item.util_gpu\"\n                                     v-bind:my_label=\"item.label_gpu\"/>\n\n                    </div>\n                    <v-card-actions>\n                        <v-btn @click=\"showModal(item.server_name)\">see more</v-btn>\n                    </v-card-actions>\n                </v-card>\n\n            </div>\n        </div>\n\n        <div class=\"container\">\n            <div class=\"row\">\n                <p class=\"headline  font-weight-bold\">KDL-S Group</p>\n            </div>\n            <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-md-4\">\n                <div v-for=\"item in gpu_status\" :key=\"item.server_name\" class=\"col-md-3\">\n\n                    <v-card class=\"pa-3\">\n                        <v-card-text>\n                            <div>\n                                {{ item.create_date}}\n                            </div>\n                            <p class=\"title text--primary\">{{ item.server_name }}</p>\n                        </v-card-text>\n                        <div>\n                            <cp_barchart :height=\"200\" v-bind:my_labels=\"item.index_gpu\"\n                                         v-bind:my_datas=\"item.util_gpu\"\n                                         v-bind:my_label=\"item.label_gpu\"/>\n\n                        </div>\n                        <v-card-actions>\n                            <v-btn @click=\"showModal(item.server_name)\">see more</v-btn>\n                        </v-card-actions>\n                    </v-card>\n\n                </div>\n            </div>\n        </div>\n\n        <v-dialog v-model=\"dialog\">\n            <cp_gpu_process v-bind:selected_server_name=\"selected_server_name\"/>\n\n        </v-dialog>\n    </v-container>\n</template>\n\n<script>\n    import cp_barchart from \"./cp_barchart\";\n    import cp_gpu_process from \"./cp_gpu_process\"\n    import {TokenService} from \"../storage/service\";\n    import axios from \"axios\";\n\n    export default {\n        name: 'cp_gpu_status',\n\n        components: {\n            cp_barchart,\n            cp_gpu_process\n\n        },\n        data: function () {\n            return {\n                dialog: false,\n                gpu_status:'',\n                selected_server_name: \"\"\n\n\n            }\n        },\n        methods: {\n\n            showModal(key) {\n                this.selected_server_name = key\n                this.dialog = true\n                console.log(key)\n            },\n\n            getGpuStatus() {\n                this.token = TokenService.getToken();\n                console.log(\"token\",this.token);\n                let axiosConfig = {\n                    headers: {\n                        'Authorization': 'Token ' + this.token\n                    },\n                };\n                axios.get(\"http://127.0.0.1:8000/api/gpu/status/\",axiosConfig)\n                    .then(\n                        res => (this.gpu_status = res.data)\n\n                    )\n                    .catch(err => console.log(err));\n                console.log(this.gpu_status);\n            }\n        },\n        created() {\n            this.getGpuStatus();\n        }\n\n    }\n</script>"],"sourceRoot":"src/components"}]}